module.exports = {
  'env': {
    browser: true,
    es6: true
  },
  'extends': 'eslint:recommended',
  'globals': {
    firebase: false,
    firebaseui: false,
    ga: false
  },
  'parser': 'babel-eslint',
  'parserOptions': {
    ecmaVersion: 6,
    sourceType: 'module'
  },
  'plugins': [
    'sort-imports-es6',
  ],
  'root': true,
  'rules': {
    // possible errors
    'comma-dangle': ['error', 'always-multiline'],
    'no-console': 'warn',
    'no-debugger': 'warn',
    'no-unsafe-finally': 'error',

    // best practices
    'array-callback-return': 'error',
    'curly': 'error',
    'dot-location': ['error', 'property'],
    'dot-notation': 'error',
    'eqeqeq': ['error', 'always'],
    'no-alert': 'warn',
    'no-empty-pattern': 'error',
    'no-multi-spaces': 'error',
    'no-native-reassign': 'error',
    'no-new': 'error',
    'no-proto': 'error',
    'no-return-assign': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-throw-literal': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-useless-escape': 'error',
    'no-warning-comments': ['error', { terms: ['fixme'] }],
    'no-with': 'error',
    'wrap-iife': ['error', 'inside'],

    // variables
    'no-shadow-restricted-names': 'error',
    'no-undef-init': 'error',

    // stylistic issues
    'array-bracket-spacing': ['error', 'never'],
    'block-spacing': ['error', 'always'],
    'brace-style': 'error',
    'camelcase': ['error', { properties: 'always' }],
    'comma-spacing': 'error',
    'comma-style': ['error', 'last'],
    'computed-property-spacing': ['error', 'never'],
    'eol-last': 'error',
    'indent': ['error', 2, { 'SwitchCase': 1 }],
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'linebreak-style': ['error', 'unix'],
    'max-depth': ['error', 3],
    'max-len': ['error', 80, {
      ignoreTrailingComments: true,
      ignoreUrls: true,
      ignorePattern: '(^export|^import)',
    }],
    'new-cap': ['error', { newIsCap: true, capIsNew: false }],
    'new-parens': 'error',
    'no-lonely-if': 'error',
    'no-mixed-operators': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multiple-empty-lines': ['error', { 'max': 1 }],
    'no-negated-condition': 'error',
    'no-nested-ternary': 'error',
    'no-spaced-func': 'error',
    'no-trailing-spaces': 'error',
    'no-unneeded-ternary': 'error',
    'no-whitespace-before-property': 'error',
    'object-curly-spacing': ['error', 'always'],
    'one-var': ['error', 'never'],
    'operator-linebreak': ['error', 'after'],
    'quote-props': ['error', 'consistent-as-needed'],
    'quotes': ['error', 'single'],
    'semi': ['error', 'always'],
    'semi-spacing': ['error', { before: false, after: true }],
    'space-before-blocks': ['error', 'always'],
    'space-before-function-paren': ['error', {
      anonymous: 'always',
      named: 'never',
    }],
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': 'error',
    'space-unary-ops': ['error', { words: true, nonwords: false }],

    // ECMAScript 6
    'no-var': 'error',
    'arrow-parens': ['error', 'as-needed'],
    'arrow-spacing': ['error', { before: true, after: true }],
    // This is throwing an error, but we should use it once it works:
    // 'generator-star-spacing': ['error', { 'before': false, 'after': true }],
    'no-confusing-arrow': ['error', { allowParens: true }],
    'no-duplicate-imports': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'object-shorthand': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-reflect': ['error', { exceptions: ['delete'] }],
    'prefer-spread': 'error',
    'require-yield': 'error',
    'rest-spread-spacing': ['error', 'never'],
    'sort-imports-es6/sort-imports-es6': ['error', {
      ignoreCase: false,
      ignoreMemberSort: false,
      memberSyntaxSortOrder: ['none', 'all', 'single', 'multiple'],
    }],
    'template-curly-spacing': ['error', 'never'],
    'yield-star-spacing': ['error', 'after'],
  },
};
